<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="67de98520725764c4c97f377303da43a" org.eventb.theory.core.outdated="false">
    <org.eventb.theory.core.scTypeParameter name="STATE" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.typeParameter#+" org.eventb.core.type="ℙ(STATE)"/>
    <org.eventb.theory.core.scTypeParameter name="EVENT" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.typeParameter#," org.eventb.core.type="ℙ(EVENT)"/>
    <org.eventb.theory.core.scDatatypeDefinition name="Machine" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4" org.eventb.theory.core.hasError="false">
        <org.eventb.theory.core.scTypeArgument name="STATE" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="STATE"/>
        <org.eventb.theory.core.scTypeArgument name="EVENT" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.typeArgument#(" org.eventb.theory.core.givenType="EVENT"/>
        <org.eventb.theory.core.scDatatypeConstructor name="Cons_machine" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)">
            <org.eventb.theory.core.scConstructorArgument name="Event" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.theory.core.scConstructorArgument name="State" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.theory.core.scConstructorArgument name="Init" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="EVENT"/>
            <org.eventb.theory.core.scConstructorArgument name="Progress" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#4" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.theory.core.scConstructorArgument name="Variant" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#." org.eventb.core.type="ℙ(STATE×ℤ)"/>
            <org.eventb.theory.core.scConstructorArgument name="Convergent" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#*" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.theory.core.scConstructorArgument name="Anticipated" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#3" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.theory.core.scConstructorArgument name="Ordinary" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#2" org.eventb.core.type="ℙ(EVENT)"/>
            <org.eventb.theory.core.scConstructorArgument name="AP" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#," org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.theory.core.scConstructorArgument name="BAP" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#-" org.eventb.core.type="ℙ(EVENT×(STATE×STATE))"/>
            <org.eventb.theory.core.scConstructorArgument name="Grd" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#\/" org.eventb.core.type="ℙ(EVENT×STATE)"/>
            <org.eventb.theory.core.scConstructorArgument name="Inv" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#0" org.eventb.core.type="ℙ(STATE)"/>
            <org.eventb.theory.core.scConstructorArgument name="Thm" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.datatypeDefinition#4|org.eventb.theory.core.datatypeConstructor#)|org.eventb.theory.core.constructorArgument#1" org.eventb.core.type="ℙ(STATE)"/>
        </org.eventb.theory.core.scDatatypeConstructor>
    </org.eventb.theory.core.scDatatypeDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Machinf" org.eventb.core.label="BAP_WellCons" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Machine(STATE,EVENT)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="dom(BAP(m))=Progress(m)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Maching" org.eventb.core.label="Grd_WellCons" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element9" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Machine(STATE,EVENT)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="dom(Grd(m))=Progress(m)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Machinh" org.eventb.core.label="Event_WellCons" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element10" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element10|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Machine(STATE,EVENT)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element10|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="partition(Event(m),{Init(m)},Progress(m))"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Machini" org.eventb.core.label="Variant_WellCons" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element12" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element12|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Machine(STATE,EVENT)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element12|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="Inv(m) ◁ Variant(m)∈Inv(m) → ℤ"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Machinj" org.eventb.core.label="Tag_Event_WellCons" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element20" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(partition(Event(m),Ordinary(m),Convergent(m),Anticipated(m))∧Init(m)∈Ordinary(m))∨¬partition(Event(m),Ordinary(m),Convergent(m),Anticipated(m))∨¬Init(m)∈Ordinary(m)">
        <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element20|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="Machine(EVENT,STATE)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element20|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="partition(Event(m),Ordinary(m),Convergent(m),Anticipated(m))∧Init(m)∈Ordinary(m)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Machink" org.eventb.core.label="Machine_WellCons" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element15" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="(BAP_WellCons(m)∧Grd_WellCons(m)∧Event_WellCons(m)∧Tag_Event_WellCons(m)∧Variant_WellCons(m))∨¬BAP_WellCons(m)∨¬Grd_WellCons(m)∨¬Event_WellCons(m)∨¬Tag_Event_WellCons(m)∨¬Variant_WellCons(m)">
        <org.eventb.theory.core.scOperatorArgument name="m" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element15|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Machine(STATE,EVENT)"/>
        <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element15|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="BAP_WellCons(m)∧Grd_WellCons(m)∧Event_WellCons(m)∧Tag_Event_WellCons(m)∧Variant_WellCons(m)"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element8">
        <org.eventb.theory.core.scMetavariable name="m" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element8" org.eventb.core.type="Machine(STATE,EVENT)"/>
        <org.eventb.theory.core.scMetavariable name="m_" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element20" org.eventb.core.type="Machine(EVENT,STATE)"/>
        <org.eventb.theory.core.scRewriteRule name="EvtBSyntax.BAP_WellCons" org.eventb.core.accurate="true" org.eventb.core.label="EvtBSyntax.BAP_WellCons" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element8" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="BAP_WellCons expansion" org.eventb.theory.core.formula="BAP_WellCons(m)">
            <org.eventb.theory.core.scRewriteRuleRHS name="BAP_WellCons rhs" org.eventb.core.label="BAP_WellCons rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element8" org.eventb.theory.core.formula="dom(BAP(m))=Progress(m)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="EvtBSyntax.Grd_WellCons" org.eventb.core.accurate="true" org.eventb.core.label="EvtBSyntax.Grd_WellCons" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element9" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Grd_WellCons expansion" org.eventb.theory.core.formula="Grd_WellCons(m)">
            <org.eventb.theory.core.scRewriteRuleRHS name="Grd_WellCons rhs" org.eventb.core.label="Grd_WellCons rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element9" org.eventb.theory.core.formula="dom(Grd(m))=Progress(m)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="EvtBSyntax.Event_WellCons" org.eventb.core.accurate="true" org.eventb.core.label="EvtBSyntax.Event_WellCons" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element10" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Event_WellCons expansion" org.eventb.theory.core.formula="Event_WellCons(m)">
            <org.eventb.theory.core.scRewriteRuleRHS name="Event_WellCons rhs" org.eventb.core.label="Event_WellCons rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element10" org.eventb.theory.core.formula="partition(Event(m),{Init(m)},Progress(m))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="EvtBSyntax.Variant_WellCons" org.eventb.core.accurate="true" org.eventb.core.label="EvtBSyntax.Variant_WellCons" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element12" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Variant_WellCons expansion" org.eventb.theory.core.formula="Variant_WellCons(m)">
            <org.eventb.theory.core.scRewriteRuleRHS name="Variant_WellCons rhs" org.eventb.core.label="Variant_WellCons rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element12" org.eventb.theory.core.formula="Inv(m) ◁ Variant(m)∈Inv(m) → ℤ"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="EvtBSyntax.Tag_Event_WellCons" org.eventb.core.accurate="true" org.eventb.core.label="EvtBSyntax.Tag_Event_WellCons" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element20" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Tag_Event_WellCons expansion" org.eventb.theory.core.formula="Tag_Event_WellCons(m_)">
            <org.eventb.theory.core.scRewriteRuleRHS name="Tag_Event_WellCons rhs" org.eventb.core.label="Tag_Event_WellCons rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element20" org.eventb.theory.core.formula="partition(Event(m_),Ordinary(m_),Convergent(m_),Anticipated(m_))∧Init(m_)∈Ordinary(m_)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="EvtBSyntax.Machine_WellCons" org.eventb.core.accurate="true" org.eventb.core.label="EvtBSyntax.Machine_WellCons" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element15" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="Machine_WellCons expansion" org.eventb.theory.core.formula="Machine_WellCons(m)">
            <org.eventb.theory.core.scRewriteRuleRHS name="Machine_WellCons rhs" org.eventb.core.label="Machine_WellCons rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/EB4EBCore/EvtBSyntax.tuf|org.eventb.theory.core.theoryRoot#EvtBSyntax|org.eventb.theory.core.newOperatorDefinition#element15" org.eventb.theory.core.formula="BAP_WellCons(m)∧Grd_WellCons(m)∧Event_WellCons(m)∧Tag_Event_WellCons(m)∧Variant_WellCons(m)"/>
        </org.eventb.theory.core.scRewriteRule>
    </org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
